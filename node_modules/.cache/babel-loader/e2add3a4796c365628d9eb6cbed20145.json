{"ast":null,"code":"var _jsxFileName = \"/Users/dongbisul/Documents/my-emotion/my-emotion/src/context/ThemeProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useContext, useCallback } from \"react\";\nimport { lightTheme, darkTheme } from \"../theme/theme\";\nimport { ThemeProvider as StyledProvider } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({});\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [ThemeMode, setThemeMode] = useState('light');\n  const themeObject = ThemeMode === 'light' ? lightTheme : darkTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      ThemeMode,\n      setThemeMode\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledProvider, {\n      theme: themeObject,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ThemeProvider, \"kRjVKd5/gPo1d+f+MJhdyL8byYo=\");\n\n_c = ThemeProvider;\n\nfunction useTheme() {\n  _s2();\n\n  const context = useContext(ThemeContext);\n  const {\n    ThemeMode,\n    setThemeMode\n  } = context;\n  const toggleTheme = useCallback(() => {\n    if (ThemeMode === \"light\") {\n      setThemeMode(\"dark\");\n    } else {\n      setThemeMode(\"light\");\n    }\n\n    ;\n  }, [ThemeMode]);\n  return [ThemeMode, toggleTheme];\n}\n\n_s2(useTheme, \"49bENqbCCOlOnlc8h5yCZPpov3c=\");\n\nexport { ThemeProvider, useTheme };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useCallback","lightTheme","darkTheme","ThemeProvider","StyledProvider","ThemeContext","children","ThemeMode","setThemeMode","themeObject","useTheme","context","toggleTheme"],"sources":["/Users/dongbisul/Documents/my-emotion/my-emotion/src/context/ThemeProvider.js"],"sourcesContent":["import { createContext, useState, useContext, useCallback } from \"react\";\nimport { lightTheme, darkTheme } from \"../theme/theme\";\nimport { ThemeProvider as StyledProvider } from \"styled-components\";\n\nconst ThemeContext = createContext({});\n\nconst ThemeProvider = ({children}) => {\n    const [ThemeMode, setThemeMode] = useState('light');\n    const themeObject = ThemeMode === 'light' ? lightTheme : darkTheme;\n  \n    return(\n      <ThemeContext.Provider value={{ ThemeMode, setThemeMode }}>\n        <StyledProvider theme={themeObject}>  \n          { children }\n        </StyledProvider>      \n      </ThemeContext.Provider>\n    )\n  }\n  \n  \nfunction useTheme() {\n    const context = useContext(ThemeContext);\n    const { ThemeMode, setThemeMode } = context;\n  \n    const toggleTheme = useCallback(() => {\n      if (ThemeMode === \"light\") {\n        setThemeMode(\"dark\");\n      }\n      else {\n        setThemeMode(\"light\")\n      };\n    }, [ThemeMode]);\n    \n    return [ ThemeMode, toggleTheme];\n  }\n\nexport { ThemeProvider, useTheme };"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,aAAa,IAAIC,cAA1B,QAAgD,mBAAhD;;AAEA,MAAMC,YAAY,gBAAGR,aAAa,CAAC,EAAD,CAAlC;;AAEA,MAAMM,aAAa,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACG;EAAD,CAAe;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,OAAD,CAA1C;EACA,MAAMW,WAAW,GAAGF,SAAS,KAAK,OAAd,GAAwBN,UAAxB,GAAqCC,SAAzD;EAEA,oBACE,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEK,SAAF;MAAaC;IAAb,CAA9B;IAAA,uBACE,QAAC,cAAD;MAAgB,KAAK,EAAEC,WAAvB;MAAA,UACIH;IADJ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAXH;;GAAMH,a;;KAAAA,a;;AAcN,SAASO,QAAT,GAAoB;EAAA;;EAChB,MAAMC,OAAO,GAAGZ,UAAU,CAACM,YAAD,CAA1B;EACA,MAAM;IAAEE,SAAF;IAAaC;EAAb,IAA8BG,OAApC;EAEA,MAAMC,WAAW,GAAGZ,WAAW,CAAC,MAAM;IACpC,IAAIO,SAAS,KAAK,OAAlB,EAA2B;MACzBC,YAAY,CAAC,MAAD,CAAZ;IACD,CAFD,MAGK;MACHA,YAAY,CAAC,OAAD,CAAZ;IACD;;IAAA;EACF,CAP8B,EAO5B,CAACD,SAAD,CAP4B,CAA/B;EASA,OAAO,CAAEA,SAAF,EAAaK,WAAb,CAAP;AACD;;IAdMF,Q;;AAgBT,SAASP,aAAT,EAAwBO,QAAxB"},"metadata":{},"sourceType":"module"}